version: 2.1
description: "Enrolls service(repo) into release notes system."

commands:
  clone:
    description: 'Clones required scripts into the current process'
    parameters:
      local_folder:
        description: "Local folder path where the scripts will be cloned to"
        type: string
    steps:
      - run:
          name: Clone scripts repo, grant executive permissions and copy to working directory
          command: |
            mkdir -p << parameters.local_folder >>
            git clone -n --depth=1 --filter=tree:0 https://github.com/ovotech/ohs-release-notes.git 
            cd ohs-release-notes
            git sparse-checkout set --no-cone scripts
            git checkout
            chmod +x ./scripts/extract_release.sh
            chmod +x ./scripts/publish_release.sh
            cp -a ./scripts/* << parameters.local_folder >>

  extract-release:
    description: 'Extracts release version and notes via semantic release dry-run'
    parameters:
      clone_folder:
        description: "Scripts location folder"
        type: string
        default: $HOME/utilities
    steps:
      - checkout
      - clone:
          local_folder: << parameters.clone_folder >>
      - run:
          name: Run semantic release dry run and extract release data
          command: |
            << parameters.clone_folder >>/extract_release.sh
      - persist_to_workspace:
          root: .
          paths:
            - release_version.env
            - release_notes.env

  publish-release:
    description: 'Publish extracted release data and additional properties to release-notes workflow'
    parameters:
      application_name:
        description: "ArgoCD application name. Has to exactly match for ingestion to work."
        type: string
      image_names:
        description: "Comma separated image names list used in ArgoCD application"
        type: string
      clone_folder:
        description: "Scripts location folder"
        type: string
        default: $HOME/utilities
    steps:
      - checkout
      - clone:
          local_folder: << parameters.clone_folder >>
      - attach_workspace:
          at: .
      - run:
          name: Publish to release-notes workflow
          command: |
            source release_version.env
            source release_notes.env
            echo "Release version is: $RELEASE_VERSION"
            << parameters.clone_folder >>/publish_release.sh \
            << parameters.application_name >> \
            "$RELEASE_VERSION" \
            "$RELEASE_NOTES" \
            << parameters.image_names >>
    