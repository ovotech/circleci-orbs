version: 2.1
description: An orb to authenticate with GCP using CircleCI OIDC
orbs:
  gcp-cli: circleci/gcp-cli@3.1.0
commands:
  gcp-oidc-generate-cred-config-file:
    description: "Authenticate with GCP using a CircleCI OIDC token."
    parameters:
      project_id:
        description: The numeric value of the GCP project id
        type: env_var_name
        default: GCP_PROJECT_ID
      workload_identity_pool_id:
        description: The workload Identity pool id in the GCP project
        type: env_var_name
        default: GCP_WIP_ID
      workload_identity_pool_provider_id:
        description: The workload Identity pool circleci provider id in the GCP project
        type: env_var_name
        default: GCP_WIP_PROVIDER_ID
      service_account_email:
        description: The service account email configured in the above workload Identity pool provider.
        type: env_var_name
        default: GCP_SERVICE_ACCOUNT_EMAIL
      config_dir:
        description: The directory in which the oidc token will be created. This will be persisted in circleci workspace
        type: string
        default: "/home/circleci"
      gcp_cred_file:
        description: The name of the file in which the generated GCP OIDC credential will be stored 
        type: string
        default: "gcp_cred_config.json"
      circle_oidc_token:
        description: The circle ci OIDC token which will be sent to GCP workload identity provider for verification. 
        type: env_var_name
        default: CIRCLE_OIDC_TOKEN
      oidc_token_file_name:
        description: The file in which the circle_oidc_token will be stored to send to GCP
        type: string
        default: "oidc_token.json"
    steps:
      - run:
          name: gcp-oidc-generate-cred-config-file
          command: |
            # Store OIDC token in temp file
            echo "<< parameters.circle_oidc_token >>" > << parameters.config_dir >>/<< parameters.oidc_token_file_name >>
            # Create a credential configuration for the generated OIDC ID Token
            gcloud iam workload-identity-pools create-cred-config \
                "projects/${<< parameters.project_id >>}/locations/global/workloadIdentityPools/${<< parameters.workload_identity_pool_id >>}/providers/${<< parameters.workload_identity_pool_provider_id >>}"\
                --output-file="<< parameters.config_dir >>/<< parameters.gcp_cred_file >>" \
                --service-account="${<< parameters.service_account_email >>}" \
                --credential-source-file=<< parameters.config_dir >>/<< parameters.oidc_token_file_name >>
      - persist_to_workspace:
          root: << parameters.config_dir >>
          paths:
            - << parameters.gcp_cred_file >>
            - << parameters.oidc_token_file_name >>
