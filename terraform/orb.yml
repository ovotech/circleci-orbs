version: 2.1
description: "Terraform orb"

executors:
  default:
    description: "Terraform 0.11 executor"
    docker:
      - image: ovotech/terraform:0.11
  terraform-0_11:
    description: "Terraform 0.11 executor"
    docker:
      - image: ovotech/terraform:0.11
  terraform-0_12:
    description: "Terraform 0.12 executor"
    docker:
      - image: ovotech/terraform:0.12

commands:
  plan:
    description: "Create a Terraform plan"
    parameters:
      path:
        type: "string"
        description: "Path to the terraform module"
      workspace:
        type: "string"
        description: "Name of the terraform workspace"
        default: "default"
      label:
        type: "string"
        description: "A friendly name for the environment this step is for"
        default: ""
      parallelism:
        type: "string"
        description: "Limit the number of concurrent operations"
        default: ""
      backend_config_file:
        type: "string"
        description: "Path to a backend config file"
        default: ""
      backend_config:
        type: "string"
        description: "Comma separated list of backend configs to set, e.g. 'foo=bar'"
        default: ""
      var:
        type: "string"
        description: "Comma separated list of vars to set, e.g. 'foo=bar'"
        default: ""
      var_file:
        type: "string"
        description: "Comma separated list of var file paths"
        default: ""
    steps:
      - run:
          name: "terraform plan << parameters.path >> << parameters.label >>"
          shell: /bin/bash -eo pipefail
          command: |
            include plan.sh

  apply:
    description: "Apply a Terraform plan"
    parameters:
      path:
        type: "string"
        description: "Path to the terraform module"
      workspace:
        type: "string"
        description: "Name of the terraform workspace"
        default: "default"
      label:
        type: "string"
        description: "A friendly name for the environment this step is for"
        default: ""
      auto_approve:
        type: "boolean"
        description: "Automatically approve and apply plan"
        default: false
      parallelism:
        type: "string"
        description: "Limit the number of concurrent operations"
        default: ""
      backend_config_file:
        type: "string"
        description: "Path to a backend config file"
        default: ""
      backend_config:
        type: "string"
        description: "Comma separated list of backend configs to set, e.g. 'foo=bar'"
        default: ""
      target:
        type: "string"
        description: "Comma separated list of targets to apply against, e.g. 'kubernetes_secret.tls_cert_public,kubernetes_secret.tls_cert_private' NOTE: this argument only takes effect if auto_approve is also set."
        default: ""
      var:
        type: "string"
        description: "Comma separated list of vars to set, e.g. 'foo=bar'"
        default: ""
      var_file:
        type: "string"
        description: "Comma separated list of var file paths"
        default: ""
    steps:
      - run:
          name: "terraform apply << parameters.path >> << parameters.label >>"
          shell: /bin/bash -eo pipefail
          command: |
            include apply.sh

  check:
    description: "Check that terraform state hasn't drifted"
    parameters:
      path:
        type: "string"
        description: "Path to the terraform module"
      workspace:
        type: "string"
        description: "Name of the terraform workspace"
        default: "default"
      label:
        type: "string"
        description: "A friendly name for the environment this step is for"
        default: ""
      parallelism:
        type: "string"
        description: "Limit the number of concurrent operations"
        default: ""
      backend_config_file:
        type: "string"
        description: "Path to a backend config file"
        default: ""
      backend_config:
        type: "string"
        description: "Comma separated list of backend configs to set, e.g. 'foo=bar'"
        default: ""
      var:
        type: "string"
        description: "Comma separated list of vars to set, e.g. 'foo=bar'"
        default: ""
      var_file:
        type: "string"
        description: "Comma separated list of var file paths"
        default: ""
    steps:
      - run:
          name: "terraform check << parameters.path >> << parameters.label >>"
          shell: /bin/bash -eo pipefail
          command: |
            include check.sh

  destroy:
    description: "Destroy terraform resources"
    parameters:
      path:
        type: "string"
        description: "Path to the terraform module"
      workspace:
        type: "string"
        description: "Name of the terraform workspace"
        default: "default"
      label:
        type: "string"
        description: "A friendly name for the environment this step is for"
        default: ""
      parallelism:
        type: "string"
        description: "Limit the number of concurrent operations"
        default: ""
      backend_config_file:
        type: "string"
        description: "Path to a backend config file"
        default: ""
      backend_config:
        type: "string"
        description: "Comma separated list of backend configs to set, e.g. 'foo=bar'"
        default: ""
      var:
        type: "string"
        description: "Comma separated list of vars to set, e.g. 'foo=bar'"
        default: ""
      var_file:
        type: "string"
        description: "Comma separated list of var file paths"
        default: ""
    steps:
      - run:
          name: "terraform destroy << parameters.path >> << parameters.label >>"
          shell: /bin/bash -eo pipefail
          command: |
            include destroy.sh

  new-workspace:
    description: "Create a terraform workspace"
    parameters:
      path:
        type: "string"
        description: "Path to the terraform module"
      workspace:
        type: "string"
        description: "Name of the terraform workspace to create"
        default: "default"
      label:
        type: "string"
        description: "A friendly name for the environment this step is for"
        default: ""
      parallelism:
        type: "string"
        description: "Limit the number of concurrent operations"
        default: ""
      backend_config_file:
        type: "string"
        description: "Path to a backend config file"
        default: ""
      backend_config:
        type: "string"
        description: "Comma separated list of backend configs to set, e.g. 'foo=bar'"
        default: ""
      var:
        type: "string"
        description: "Comma separated list of vars to set, e.g. 'foo=bar'"
        default: ""
      var_file:
        type: "string"
        description: "Comma separated list of var file paths"
        default: ""
    steps:
      - run:
          name: "terraform workspace new"
          shell: /bin/bash -eo pipefail
          command: |
            include init.sh
            if [[ -z "$(terraform workspace list $module_path | grep $workspace)" ]]; then
              terraform workspace new "$workspace" "$module_path"
            else
              echo "$workspace already exists"
            fi

  destroy-workspace:
    description: "Destroy a terraform workspace"
    parameters:
      path:
        type: "string"
        description: "Path to the terraform module"
      workspace:
        type: "string"
        description: "Name of the terraform workspace to destroy"
        default: "default"
      label:
        type: "string"
        description: "A friendly name for the environment this step is for"
        default: ""
      parallelism:
        type: "string"
        description: "Limit the number of concurrent operations"
        default: ""
      backend_config_file:
        type: "string"
        description: "Path to a backend config file"
        default: ""
      backend_config:
        type: "string"
        description: "Comma separated list of backend configs to set, e.g. 'foo=bar'"
        default: ""
      var:
        type: "string"
        description: "Comma separated list of vars to set, e.g. 'foo=bar'"
        default: ""
      var_file:
        type: "string"
        description: "Comma separated list of var file paths"
        default: ""
    steps:
      - destroy:
          path: << parameters.path >>
          workspace: << parameters.workspace >>
          label: << parameters.label >>
          parallelism: << parameters.parallelism >>
          backend_config_file: << parameters.backend_config_file >>
          backend_config: << parameters.backend_config >>
          var: << parameters.var >>
          var_file: << parameters.var_file >>
      - run:
          name: "terraform workspace delete"
          shell: /bin/bash -eo pipefail
          command: |
            include init.sh
            terraform workspace delete "$workspace" "$module_path"

  version:
    description: "Prints terraform and provider versions"
    parameters:
      path:
        type: "string"
        description: "Path to the terraform module"
      workspace:
        type: "string"
        description: "Name of the terraform workspace to create"
        default: "default"
      label:
        type: "string"
        description: "A friendly name for the environment this step is for"
        default: ""
      parallelism:
        type: "string"
        description: "Limit the number of concurrent operations"
        default: ""
      backend_config_file:
        type: "string"
        description: "Path to a backend config file"
        default: ""
      backend_config:
        type: "string"
        description: "Comma separated list of backend configs to set, e.g. 'foo=bar'"
        default: ""
      var:
        type: "string"
        description: "Comma separated list of vars to set, e.g. 'foo=bar'"
        default: ""
      var_file:
        type: "string"
        description: "Comma separated list of var file paths"
        default: ""
    steps:
      - run:
          name: "terraform version"
          shell: /bin/bash -eo pipefail
          command: |
            include init.sh
            terraform version

  publish-module:
    description: "Publish a terraform module to a module registry"
    parameters:
      path:
        type: "string"
        description: "Path to the terraform module"
      module_name:
        type: "string"
        description: "The full module name, of the form <namespace>/<name>/<provider>"
      version_file_path:
        type: "string"
        description: "Path to a file containing the semantic version of the module to publish"
    steps:
      - run:
          name: "terraform version"
          shell: /bin/bash -eo pipefail
          command: |
            include publish.sh

jobs:
  plan:
    executor: default
    description: "Create a Terraform plan"
    parameters:
      path:
        type: "string"
        description: "Path to the terraform module"
      workspace:
        type: "string"
        description: "Name of the terraform workspace"
        default: "default"
      label:
        type: "string"
        description: "A friendly name for the environment this job is for"
        default: ""
      parallelism:
        type: "string"
        description: "Limit the number of concurrent operations"
        default: ""
      backend_config_file:
        type: "string"
        description: "Path to a backend config file"
        default: ""
      backend_config:
        type: "string"
        description: "Comma separated list of backend configs to set, e.g. 'foo=bar'"
        default: ""
      var:
        type: "string"
        description: "Comma separated list of vars to set, e.g. 'foo=bar'"
        default: ""
      var_file:
        type: "string"
        description: "Comma separated list of var file paths"
        default: ""
    steps:
      - checkout
      - plan:
          path: << parameters.path >>
          workspace: << parameters.workspace >>
          label: << parameters.label >>
          parallelism: << parameters.parallelism >>
          backend_config_file: << parameters.backend_config_file >>
          backend_config: << parameters.backend_config >>
          var: << parameters.var >>
          var_file: << parameters.var_file >>

  apply:
    executor: default
    description: "Apply a terraform plan"
    parameters:
      path:
        type: "string"
        description: "Path to the terraform module"
      workspace:
        type: "string"
        description: "Name of the terraform workspace"
        default: "default"
      label:
        type: "string"
        description: "A friendly name for the environment this job is for"
        default: ""
      auto_approve:
        type: "boolean"
        description: "Automatically approve and apply plan"
        default: false
      parallelism:
        type: "string"
        description: "Limit the number of concurrent operations"
        default: ""
      backend_config_file:
        type: "string"
        description: "Path to a backend config file"
        default: ""
      backend_config:
        type: "string"
        description: "Comma separated list of backend configs to set, e.g. 'foo=bar'"
        default: ""
      target:
        type: "string"
        description: "Comma separated list of targets to apply against, e.g. 'kubernetes_secret.tls_cert_public,kubernetes_secret.tls_cert_private' NOTE: this argument only takes effect if auto_approve is also set."
        default: ""
      var:
        type: "string"
        description: "Comma separated list of vars to set, e.g. 'foo=bar'"
        default: ""
      var_file:
        type: "string"
        description: "Comma separated list of var file paths"
        default: ""
    steps:
      - checkout
      - apply:
          path: << parameters.path >>
          workspace: << parameters.workspace >>
          label: << parameters.label >>
          auto_approve: << parameters.auto_approve >>
          parallelism: << parameters.parallelism >>
          backend_config_file: << parameters.backend_config_file >>
          backend_config: << parameters.backend_config >>
          target: << parameters.target >>
          var: << parameters.var >>
          var_file: << parameters.var_file >>

  check:
    executor: default
    description: "Check that terraform state hasn't drifted"
    parameters:
      path:
        type: "string"
        description: "Path to the terraform module"
      workspace:
        type: "string"
        description: "Name of the terraform workspace"
        default: "default"
      label:
        type: "string"
        description: "A friendly name for the environment this job is for"
        default: ""
      parallelism:
        type: "string"
        description: "Limit the number of concurrent operations"
        default: ""
      backend_config_file:
        type: "string"
        description: "Path to a backend config file"
        default: ""
      backend_config:
        type: "string"
        description: "Comma separated list of backend configs to set, e.g. 'foo=bar'"
        default: ""
      var:
        type: "string"
        description: "Comma separated list of vars to set, e.g. 'foo=bar'"
        default: ""
      var_file:
        type: "string"
        description: "Comma separated list of var file paths"
        default: ""
    steps:
      - checkout
      - check:
          path: << parameters.path >>
          workspace: << parameters.workspace >>
          label: << parameters.label >>
          parallelism: << parameters.parallelism >>
          backend_config_file: << parameters.backend_config_file >>
          backend_config: << parameters.backend_config >>
          var: << parameters.var >>
          var_file: << parameters.var_file >>

  destroy:
    executor: default
    description: "Destroy terraform resources"
    parameters:
      path:
        type: "string"
        description: "Path to the terraform module"
      workspace:
        type: "string"
        description: "Name of the terraform workspace"
        default: "default"
      label:
        type: "string"
        description: "A friendly name for the environment this job is for"
        default: ""
      parallelism:
        type: "string"
        description: "Limit the number of concurrent operations"
        default: ""
      backend_config_file:
        type: "string"
        description: "Path to a backend config file"
        default: ""
      backend_config:
        type: "string"
        description: "Comma separated list of backend configs to set, e.g. 'foo=bar'"
        default: ""
      var:
        type: "string"
        description: "Comma separated list of vars to set, e.g. 'foo=bar'"
        default: ""
      var_file:
        type: "string"
        description: "Comma separated list of var file paths"
        default: ""
    steps:
      - checkout
      - destroy:
          path: << parameters.path >>
          workspace: << parameters.workspace >>
          label: << parameters.label >>
          parallelism: << parameters.parallelism >>
          backend_config_file: << parameters.backend_config_file >>
          backend_config: << parameters.backend_config >>
          var: << parameters.var >>
          var_file: << parameters.var_file >>

  new-workspace:
    executor: default
    description: "Create a terraform workspace"
    parameters:
      path:
        type: "string"
        description: "Path to the terraform module"
      workspace:
        type: "string"
        description: "Name of the terraform workspace to create"
        default: "default"
      label:
        type: "string"
        description: "A friendly name for the environment this step is for"
        default: ""
      parallelism:
        type: "string"
        description: "Limit the number of concurrent operations"
        default: ""
      backend_config_file:
        type: "string"
        description: "Path to a backend config file"
        default: ""
      backend_config:
        type: "string"
        description: "Comma separated list of backend configs to set, e.g. 'foo=bar'"
        default: ""
      var:
        type: "string"
        description: "Comma separated list of vars to set, e.g. 'foo=bar'"
        default: ""
      var_file:
        type: "string"
        description: "Comma separated list of var file paths"
        default: ""
    steps:
      - checkout
      - new-workspace:
          path: << parameters.path >>
          workspace: << parameters.workspace >>
          label: << parameters.label >>
          parallelism: << parameters.parallelism >>
          backend_config_file: << parameters.backend_config_file >>
          backend_config: << parameters.backend_config >>
          var: << parameters.var >>
          var_file: << parameters.var_file >>

  destroy-workspace:
    executor: default
    description: "Destroy and delete a terraform workspace"
    parameters:
      path:
        type: "string"
        description: "Path to the terraform module"
      workspace:
        type: "string"
        description: "Name of the terraform workspace to destroy"
        default: "default"
      label:
        type: "string"
        description: "A friendly name for the environment this step is for"
        default: ""
      parallelism:
        type: "string"
        description: "Limit the number of concurrent operations"
        default: ""
      backend_config_file:
        type: "string"
        description: "Path to a backend config file"
        default: ""
      backend_config:
        type: "string"
        description: "Comma separated list of backend configs to set, e.g. 'foo=bar'"
        default: ""
      var:
        type: "string"
        description: "Comma separated list of vars to set, e.g. 'foo=bar'"
        default: ""
      var_file:
        type: "string"
        description: "Comma separated list of var file paths"
        default: ""
    steps:
      - checkout
      - destroy-workspace:
          path: << parameters.path >>
          workspace: << parameters.workspace >>
          label: << parameters.label >>
          parallelism: << parameters.parallelism >>
          backend_config_file: << parameters.backend_config_file >>
          backend_config: << parameters.backend_config >>
          var: << parameters.var >>
          var_file: << parameters.var_file >>
