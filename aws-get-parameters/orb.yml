version: 2.1
description: An orb to get AWS parameters from the parameter store
orbs:
  aws-cli: circleci/aws-cli@0.1.13

commands:
  get-parameters:
    description: "Get parameter list from aws"
    parameters:
      values:
        type: string
      output-file:
        type: string
      aws-access-key-id:
        default: AWS_ACCESS_KEY_ID
        description: |
          AWS access key id for IAM role. Set this to the name of
          the environment variable you will use to hold this
          value, i.e. AWS_ACCESS_KEY.
        type: env_var_name
      aws-region:
        default: AWS_DEFAULT_REGION
        description: |
          Env var of AWS region to operate in
          (defaults to AWS_DEFAULT_REGION)
        type: env_var_name
      aws-secret-access-key:
        default: AWS_SECRET_ACCESS_KEY
        description: |
          AWS secret key for IAM role. Set this to the name of
          the environment variable you will use to hold this
          value, i.e. $AWS_SECRET_ACCESS_KEY.
        type: env_var_name
      profile-name:
        default: default
        description: Profile name to be configured.
        type: string
    steps:
      - aws-cli/install:
          aws-access-key-id: << parameters.aws-access-key-id >>
          aws-secret-access-key: << parameters.aws-secret-access-key >>
          profile-name: << parameters.profile-name >>
          aws-region: << parameters.aws-region >>
      - aws-cli/configure
          aws-access-key-id: << parameters.aws-access-key-id >>
          aws-secret-access-key: << parameters.aws-secret-access-key >>
          profile-name: << parameters.profile-name >>
          aws-region: << parameters.aws-region >>
      - run:
          name: Create File
          command: echo > << parameters.output-file >>
      - run:
          name: Get AWS parameters and save to file
          command: |
            for value in << parameters.values >>
            do
                IFS='=' read -ra tmp \<<< "$value";
                AWS_KEY=${tmp[0]}
                LOCAL_KEY=${tmp[1]}
                PARDATA=$(aws ssm get-parameters --with-decryption --names "${AWS_KEY}" | jq '.Parameters[].Value')
                echo "export ${LOCAL_KEY}=${PARDATA}" >> << parameters.output-file >>
            done